package com.hrms.modules.devTools.autoGeneratedCode;

import org.springframework.stereotype.Service;

import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

@Service
public class DevService {

    private String packageName;


    public void create(AutoGenModule autoGenModule) throws IOException {
        System.out.println("PACK"+packageName);

        Path entityPath = Paths.get(autoGenModule.getSourceUrl()+"\\entity"+"\\"+autoGenModule.getPackageName()+"\\"+autoGenModule.getDomainName()+".java");
        System.out.println("LOCATION IS "+entityPath);
        if (Files.exists(entityPath)) {
            System.out.println("Entity File already exists");
        } else {
            Files.createFile(entityPath);
            System.out.println("Entity File created");


            try {
                FileWriter myWriter = new FileWriter(""+entityPath);
                myWriter.write("package com.hrms.entity."+autoGenModule.getPackageName()+";\n" +
                        "import com.hrms.entity.baseEntity.BaseEntity;\n" +
                        "import lombok.*;\n" +
                        "\n" +
                        "import javax.persistence.*;\n" +
                        "\n" +
                        "\n" +
                        "@Setter\n" +
                        "@Getter\n" +
                        "//@AllArgsConstructor\n" +
                        "//@NoArgsConstructor\n" +
                        "@Entity\n" +
                        "@Table(name=\"tbl_name\")\n"+"public class "+autoGenModule.getDomainName()+" extends BaseEntity {\n" +
                        "\t\n" +
                        "}");
                myWriter.close();
                System.out.println("Successfully wrote to the Entity file.");
            } catch (IOException e) {
                System.out.println("An error writing in entity file.");
                e.printStackTrace();
            }

        }

        Path repoPath = Paths.get(autoGenModule.getSourceUrl()+"\\repository"+"\\"+autoGenModule.getPackageName()+"\\"+autoGenModule.getDomainName()+"Repository"+".java");
        System.out.println("LOCATION IS "+repoPath);
        if (Files.exists(repoPath)) {
            System.out.println("Repository File already exists");
        } else {

            Files.createFile(repoPath);
            System.out.println("Repository File created");
            try {
                FileWriter myWriter = new FileWriter(""+repoPath);
                myWriter.write("package com.hrms.repository."+autoGenModule.getPackageName()+";\n" +
                        "import com.hrms.entity.baseEntity.BaseEntity;\n" +
                        "import com.hrms.entity."+autoGenModule.getPackageName()+"."+autoGenModule.getDomainName()+";\n" +
                        "import com.hrms.repository.generic.GenericRepository;\n" +
                                "import org.springframework.stereotype.Repository;\n" +
                                "\n" +
                                "import java.util.Optional;\n"+
                        "@Repository\n" +
                                "public interface "+autoGenModule.getDomainName()+"Repository"+" extends GenericRepository"+
                        "<"+autoGenModule.getDomainName()+">"+ "{\n" +
                                "   \n" +
                                "}\n"
                        );
                myWriter.close();
                System.out.println("Successfully wrote to the Repository file.");
            } catch (IOException e) {
                System.out.println("An error writing in Repository file.");
                e.printStackTrace();
            }

        }

        Path servicePath = Paths.get(autoGenModule.getSourceUrl()+"\\service"+"\\"+autoGenModule.getPackageName()+"\\"+"I"+autoGenModule.getDomainName()+"Service"+".java");
        System.out.println("LOCATION IS "+servicePath);
        if (Files.exists(servicePath)) {
            System.out.println("Service File already exists");
        } else {

            Files.createFile(servicePath);
            System.out.println("Service File created");
            try {
                FileWriter myWriter = new FileWriter(""+servicePath);
                myWriter.write("package com.hrms.service."+autoGenModule.getPackageName()+";\n" +
                        "import com.hrms.entity."+autoGenModule.getPackageName()+"."+autoGenModule.getDomainName()+";\n" +
                        "import com.hrms.service.generic.ServiceGeneric;\n" +
                        "\n" +
                        "public interface "+"I"+autoGenModule.getDomainName()+"Service"+" extends ServiceGeneric"+
                        "<"+autoGenModule.getDomainName()+">"+ "{\n" +
                        "   \n" +
                        "}\n"
                );
                myWriter.close();
                System.out.println("Successfully wrote to the Service file.");
            } catch (IOException e) {
                System.out.println("An error writing in Service file.");
                e.printStackTrace();
            }

        }


        Path serviceImplPath = Paths.get(autoGenModule.getSourceUrl()+"\\serviceImpl"+"\\"+autoGenModule.getPackageName()+"\\"+autoGenModule.getDomainName()+"ServiceImpl"+".java");
        System.out.println("LOCATION IS "+serviceImplPath);

        if (Files.exists(serviceImplPath)) {
            System.out.println("ServiceImpl File already exists");
        } else {

            Files.createFile(serviceImplPath);
            System.out.println("ServiceImpl File created");
            try {
                FileWriter myWriter = new FileWriter(""+serviceImplPath);
                myWriter.write("package com.hrms.serviceImpl."+autoGenModule.getPackageName()+";\n" +
                        "import com.hrms.entity."+autoGenModule.getPackageName()+"."+autoGenModule.getDomainName()+";\n" +
                        "import com.hrms.service.generic.impl.ServiceGenericImpl;\n" +
                        "import com.hrms.service."+autoGenModule.getPackageName()+"."+"I"+autoGenModule.getDomainName()+"Service;\n"+
                        "import org.springframework.stereotype.Service;\n" +
                        "\n" +
                        "@Service\n" +
                        "public class "+autoGenModule.getDomainName()+"ServiceImpl"+" extends ServiceGenericImpl"+"<"+autoGenModule.getDomainName()+"> implements "+"I"+autoGenModule.getDomainName()+"Service"+"{\n"+

                        "   \n" +
                        "}\n"
                );
                myWriter.close();
                System.out.println("Successfully wrote to the ServiceImpl file.");
            } catch (IOException e) {
                System.out.println("An error writing in ServiceImpl file.");
                e.printStackTrace();
            }

        }


        Path controllerPath = Paths.get(autoGenModule.getSourceUrl()+"\\controller"+"\\"+autoGenModule.getPackageName()+"\\"+"I"+autoGenModule.getDomainName()+"Controller"+".java");
        System.out.println("LOCATION IS "+controllerPath);
        if (Files.exists(controllerPath)) {
            System.out.println("Controller File already exists");
        } else {

            Files.createFile(controllerPath);
            System.out.println("Controller File created");
            try {
                FileWriter myWriter = new FileWriter(""+controllerPath);
                myWriter.write("package com.hrms.controller."+autoGenModule.getPackageName()+";\n" +
                        "import com.hrms.entity."+autoGenModule.getPackageName()+"."+autoGenModule.getDomainName()+";\n" +
                        "import com.hrms.controller.generic.ControllerGeneric;\n" +
                        "\n" +
                        "public interface "+"I"+autoGenModule.getDomainName()+"Controller"+" extends ControllerGeneric"+
                        "<"+autoGenModule.getDomainName()+">"+ "{\n" +
                        "   \n" +
                        "}\n"
                );
                myWriter.close();
                System.out.println("Successfully wrote to the Controller file.");
            } catch (IOException e) {
                System.out.println("An error writing in Controller file.");
                e.printStackTrace();
            }

        }


        Path controllerImplPath = Paths.get(autoGenModule.getSourceUrl()+"\\controller"+"\\"+autoGenModule.getPackageName()+"\\impl"+"\\"+autoGenModule.getDomainName()+"ControllerImpl"+".java");
        System.out.println("LOCATION IS "+controllerImplPath);

        if (Files.exists(controllerImplPath)) {
            System.out.println("controllerImpl File already exists");
        } else {

            Files.createFile(controllerImplPath);
            System.out.println("controllerImpl File created");
            try {
                FileWriter myWriter = new FileWriter(""+controllerImplPath);
                myWriter.write("package com.hrms.controller."+autoGenModule.getPackageName()+".impl"+";\n" +
                        "import com.hrms.entity."+autoGenModule.getPackageName()+"."+autoGenModule.getDomainName()+";\n" +
                        "import com.hrms.controller.generic.impl.ControllerGenericImpl;\n" +
                        "import com.hrms.controller."+autoGenModule.getPackageName()+"."+"I"+autoGenModule.getDomainName()+"Controller;\n"+
                        "import org.springframework.stereotype.Service;\n" +
                        "import com.hrms.exception.CustomException;\n" +
                                "import com.hrms.exception.NotFoundException;\n" +
                                "import org.springframework.beans.factory.annotation.Autowired;\n" +
                                "import org.springframework.http.ResponseEntity;\n" +
                                "import org.springframework.web.bind.annotation.CrossOrigin;\n" +
                                "import org.springframework.web.bind.annotation.GetMapping;\n" +
                                "import org.springframework.web.bind.annotation.RequestMapping;\n" +
                                "import org.springframework.web.bind.annotation.RestController;\n"+

                        "import java.util.List;\n"+
                        "import com.hrms.service."+autoGenModule.getPackageName()+".I"+autoGenModule.getDomainName()+"Service;\n"+
                        "\n" +
                        "@RestController\n" +
                                "@RequestMapping(\"/endpoint\")\n" +
                                "@CrossOrigin(\"*\")\n"+
                        "public class "+autoGenModule.getDomainName()+"ControllerImpl"+" extends ControllerGenericImpl"+"<"+autoGenModule.getDomainName()+"> implements "+"I"+autoGenModule.getDomainName()+"Controller"+"{\n"+

                                " @Autowired\n" +
                                "    private "+ "I"+autoGenModule.getDomainName()+"Service "+ autoGenModule.getDomainName()+"Service;"+"\n"+

                        " @Override\n" +
                                "    public ResponseEntity<Object> save("+autoGenModule.getDomainName()+" entity) throws CustomException {\n" +
                                "        return super.save(entity);\n" +
                                "    }\n" +
                                "\n" +
                                "    @Override\n" +
                                "    public ResponseEntity<"+autoGenModule.getDomainName()+"> findAll() throws CustomException {\n" +
                                "        return super.findAll();\n" +
                                "    }\n" +
                                "\n" +
                                "    @Override\n" +
                                "    public ResponseEntity<"+autoGenModule.getDomainName()+"> findById(Long id) throws NotFoundException, CustomException {\n" +
                                "        return super.findById(id);\n" +
                                "    }\n" +
                                "\n" +
                                "    @Override\n" +
                                "    public ResponseEntity<String> delete(Long id) throws CustomException {\n" +
                                "        return super.delete(id);\n" +
                                "    }\n" +
                                "\n" +
                                "    @Override\n" +
                                "    public ResponseEntity<Object> update("+autoGenModule.getDomainName()+" entity) throws CustomException {\n" +
                                "        return super.update(entity);\n" +
                                "    }\n" +
                                "\n" +

                        "   \n" +
                        "}\n"
                );
                myWriter.close();
                System.out.println("Successfully wrote to the controllerImpl file.");
            } catch (IOException e) {
                System.out.println("An error writing in controllerImpl file.");
                e.printStackTrace();
            }

        }

    }

}
